Changes in branch origin/master, between d6a29e291815f36d00aef292ece04703f0a91f67 and 63987174597bfea767a49a7fa19b0c58a493a764
commit 63987174597bfea767a49a7fa19b0c58a493a764
tree 6402a62bc3e08233c541f3d92b30ad13a9832a7b
parent d6a29e291815f36d00aef292ece04703f0a91f67
author Vijayendra Bhamidipati <vijayendra.bhamidipati@citrix.com> 1331253534 -0800
committer Vijayendra Bhamidipati <vijayendra.bhamidipati@citrix.com> 1331256868 -0800

    Bug 13127: API error text refer to database ids instead of uuids
    
    Description:
    
    	Adding a new class AnnotationHelper, that provides routines
    	to read annotations from a VO class.
    
    	Cloudstack does the mapping between cloudstack java VO objects
    	and the database tables using cglib. cglib creates proxy objects
    	as the maps between VO objects and the database.  A VO (value
    	object) class is populated after querying from the MYSQL database.
    
    	Ideally, a getAnnotation() issued on a cglib proxy object should
    	get a list of all the annotations in all classes in the inheritence
    	chain. However, this functionality seems to be currently broken
    	in cglib.  Hence, when querying for annotations given the object
    	of a VO class, we need to get to the corresponding VO class of that
    	cglib proxy class and issue a getAnnotation() on that class. To get
    	the VO class, we simply need to get the super class of the proxy
    	object. Also, we need to recurse to the root VO class in case the
    	VO class extends another VO class.
    
    	Note that the cache used by CS is ehcache.

:100644 100644 853e44dc86743bfd1c1547bc7f853953814a1c0e 3255dc682780f91d2834554f7d7e44da156cd627 M	server/src/com/cloud/domain/DomainVO.java
:100755 100755 3360366e4e1bf1be40b41d92e540081fe7fa0b0e 82aaa5f32ae3050254928fabf8622d64ec634358 M	server/src/com/cloud/server/ManagementServerImpl.java
:000000 100755 0000000000000000000000000000000000000000 d983ef3b083b89d6e4e834c6c37d75e0330244e5 A	utils/src/com/cloud/utils/AnnotationHelper.java
